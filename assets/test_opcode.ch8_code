0200: JMP #24E            ; Jump to address #24E
0202: DW  0xEAAC
0204: LDI I,#AEA          ; I ← #AEA
0206: RND VE,#AA          ; VE ← (rand & #AA)
0208: LDI I,#AAE          ; I ← #AAE
020A: DW  0xE0A0
020C: LDI I,#0E0          ; I ← #0E0
020E: RND V0,#40          ; V0 ← (rand & #40)
0210: SNE V0,#E0          ; Skip next if V0 != #E0
0212: DW  0xE020
0214: RND V0,#E0          ; V0 ← (rand & #E0)
0216: DW  0xE060
0218: CAL #0E0            ; Call sub-routine at #0E0
021A: LDI I,#0E0          ; I ← #0E0
021C: CAL #020            ; Call sub-routine at #020
021E: LDS V0,#40          ; V0 ← #40
0220: CAL #040            ; Call sub-routine at #040
0222: DW  0xE080
0224: DW  0xE0E0
0226: DW  0xE020
0228: CAL #020            ; Call sub-routine at #020
022A: DW  0xE0E0
022C: LDI I,#0E0          ; I ← #0E0
022E: DW  0xE0E0
0230: CAL #0E0            ; Call sub-routine at #0E0
0232: SNE V0,#A0          ; Skip next if V0 != #A0
0234: DW  0xE0A0
0236: DW  0xE0C0
0238: LDC V0,VE           ; V0 ← VE
023A: DW  0xE080
023C: RND V0,#80          ; V0 ← (rand & #80)
023E: LDI I,#040          ; I ← #040
0240: LDI I,#0A0          ; I ← #0A0
0242: LDI I,#202          ; I ← #202
0244: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
0246: RET                 ; Return from sub-routine
0248: LDI I,#202          ; I ← #202
024A: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
024C: JMP #3DC            ; Jump to address #3DC
024E: LDS V8,#01          ; V8 ← #01
0250: LDS V9,#05          ; V9 ← #05
0252: LDS VA,#0A          ; VA ← #0A
0254: LDS VB,#01          ; VB ← #01
0256: LDS V5,#2A          ; V5 ← #2A
0258: LDS V6,#2B          ; V6 ← #2B
025A: LDI I,#216          ; I ← #216
025C: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
025E: LDI I,#23E          ; I ← #23E
0260: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
0262: LDI I,#202          ; I ← #202
0264: SEQ V6,#2B          ; Skip next if V6 == #2B
0266: LDI I,#206          ; I ← #206
0268: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
026A: LDS VB,#06          ; VB ← #06
026C: LDI I,#21A          ; I ← #21A
026E: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
0270: LDI I,#23E          ; I ← #23E
0272: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
0274: LDI I,#206          ; I ← #206
0276: SNE V5,#2A          ; Skip next if V5 != #2A
0278: LDI I,#202          ; I ← #202
027A: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
027C: LDS VB,#0B          ; VB ← #0B
027E: LDI I,#21E          ; I ← #21E
0280: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
0282: LDI I,#23E          ; I ← #23E
0284: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
0286: LDI I,#206          ; I ← #206
0288: SER V5,V6           ; Skip next if V5 == V6
028A: LDI I,#202          ; I ← #202
028C: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
028E: LDS VB,#10          ; VB ← #10
0290: LDI I,#226          ; I ← #226
0292: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
0294: LDI I,#23E          ; I ← #23E
0296: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
0298: LDI I,#206          ; I ← #206
029A: ADR V6,#FF          ; V6 += #FF
029C: SNE V6,#2A          ; Skip next if V6 != #2A
029E: LDI I,#202          ; I ← #202
02A0: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
02A2: LDS VB,#15          ; VB ← #15
02A4: LDI I,#22E          ; I ← #22E
02A6: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
02A8: LDI I,#23E          ; I ← #23E
02AA: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
02AC: LDI I,#206          ; I ← #206
02AE: SNR V5,V6           ; Skip next if V5 != V6
02B0: LDI I,#202          ; I ← #202
02B2: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
02B4: LDS VB,#1A          ; VB ← #1A
02B6: LDI I,#232          ; I ← #232
02B8: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
02BA: LDI I,#23E          ; I ← #23E
02BC: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
02BE: CAL #242            ; Call sub-routine at #242
02C0: LDS V8,#17          ; V8 ← #17
02C2: LDS V9,#1B          ; V9 ← #1B
02C4: LDS VA,#20          ; VA ← #20
02C6: LDS VB,#01          ; VB ← #01
02C8: LDI I,#20A          ; I ← #20A
02CA: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
02CC: LDI I,#236          ; I ← #236
02CE: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
02D0: LDI I,#202          ; I ← #202
02D2: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
02D4: LDS VB,#06          ; VB ← #06
02D6: LDI I,#22A          ; I ← #22A
02D8: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
02DA: LDI I,#20A          ; I ← #20A
02DC: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
02DE: LDI I,#206          ; I ← #206
02E0: LDC V7,V5           ; V7 ← V5
02E2: SNE V7,#2A          ; Skip next if V7 != #2A
02E4: LDI I,#202          ; I ← #202
02E6: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
02E8: LDS VB,#0B          ; VB ← #0B
02EA: LDI I,#22A          ; I ← #22A
02EC: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
02EE: LDI I,#20E          ; I ← #20E
02F0: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
02F2: LDI I,#206          ; I ← #206
02F4: LDS V7,#2A          ; V7 ← #2A
02F6: ORR V7,VB           ; V7 |= VB
02F8: SNE V7,#2B          ; Skip next if V7 != #2B
02FA: LDI I,#202          ; I ← #202
02FC: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
02FE: LDS VB,#10          ; VB ← #10
0300: LDI I,#22A          ; I ← #22A
0302: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
0304: LDI I,#212          ; I ← #212
0306: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
0308: LDI I,#206          ; I ← #206
030A: LDS V6,#78          ; V6 ← #78
030C: LDS V7,#1F          ; V7 ← #1F
030E: AND V7,V6           ; V7 &= V6
0310: SNE V7,#18          ; Skip next if V7 != #18
0312: LDI I,#202          ; I ← #202
0314: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
0316: LDS VB,#15          ; VB ← #15
0318: LDI I,#22A          ; I ← #22A
031A: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
031C: LDI I,#216          ; I ← #216
031E: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
0320: LDI I,#206          ; I ← #206
0322: LDS V6,#78          ; V6 ← #78
0324: LDS V7,#1F          ; V7 ← #1F
0326: XOR V7,V6           ; V7 ^= V6
0328: SNE V7,#67          ; Skip next if V7 != #67
032A: LDI I,#202          ; I ← #202
032C: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
032E: LDS VB,#1A          ; VB ← #1A
0330: LDI I,#22A          ; I ← #22A
0332: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
0334: LDI I,#21A          ; I ← #21A
0336: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
0338: LDI I,#206          ; I ← #206
033A: LDS V6,#8C          ; V6 ← #8C
033C: LDS V7,#8C          ; V7 ← #8C
033E: ADD V7,V6           ; V7 += V6   (VF = carry)
0340: SNE V7,#18          ; Skip next if V7 != #18
0342: LDI I,#202          ; I ← #202
0344: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
0346: LDS V8,#2C          ; V8 ← #2C
0348: LDS V9,#30          ; V9 ← #30
034A: LDS VA,#34          ; VA ← #34
034C: LDS VB,#01          ; VB ← #01
034E: LDI I,#22A          ; I ← #22A
0350: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
0352: LDI I,#21E          ; I ← #21E
0354: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
0356: LDI I,#206          ; I ← #206
0358: LDS V6,#8C          ; V6 ← #8C
035A: LDS V7,#78          ; V7 ← #78
035C: SUB V7,V6           ; V7 -= V6   (VF = !borrow)
035E: SNE V7,#EC          ; Skip next if V7 != #EC
0360: LDI I,#202          ; I ← #202
0362: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
0364: LDS VB,#06          ; VB ← #06
0366: LDI I,#22A          ; I ← #22A
0368: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
036A: LDI I,#222          ; I ← #222
036C: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
036E: LDI I,#206          ; I ← #206
0370: LDS V6,#E0          ; V6 ← #E0
0372: SHL V6              ; V6 <<= 1      (VF = MSB before shift)
0374: SNE V6,#C0          ; Skip next if V6 != #C0
0376: LDI I,#202          ; I ← #202
0378: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
037A: LDS VB,#0B          ; VB ← #0B
037C: LDI I,#22A          ; I ← #22A
037E: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
0380: LDI I,#236          ; I ← #236
0382: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
0384: LDI I,#206          ; I ← #206
0386: LDS V6,#0F          ; V6 ← #0F
0388: SHR V6              ; V6 >>= 1      (VF = LSB before shift)
038A: SNE V6,#07          ; Skip next if V6 != #07
038C: LDI I,#202          ; I ← #202
038E: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
0390: LDS VB,#10          ; VB ← #10
0392: LDI I,#23A          ; I ← #23A
0394: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
0396: LDI I,#21E          ; I ← #21E
0398: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
039A: LDI I,#3E8          ; I ← #3E8
039C: LDS V0,#00          ; V0 ← #00
039E: LDS V1,#30          ; V1 ← #30
03A0: VXD [I],V1          ; Store V0..V1 to memory at I
03A2: LDI I,#3E9          ; I ← #3E9
03A4: VXL V0,[I]          ; Load V0..V0 from memory at I
03A6: LDI I,#206          ; I ← #206
03A8: SNE V0,#30          ; Skip next if V0 != #30
03AA: LDI I,#202          ; I ← #202
03AC: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
03AE: LDS VB,#15          ; VB ← #15
03B0: LDI I,#23A          ; I ← #23A
03B2: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
03B4: LDI I,#216          ; I ← #216
03B6: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
03B8: LDI I,#3E8          ; I ← #3E8
03BA: LDS V6,#89          ; V6 ← #89
03BC: BCD  B,V6           ; Store BCD of V6 at I, I+1, I+2
03BE: VXL V2,[I]          ; Load V0..V2 from memory at I
03C0: LDI I,#202          ; I ← #202
03C2: SEQ V0,#01          ; Skip next if V0 == #01
03C4: LDI I,#206          ; I ← #206
03C6: SEQ V1,#03          ; Skip next if V1 == #03
03C8: LDI I,#206          ; I ← #206
03CA: SEQ V2,#07          ; Skip next if V2 == #07
03CC: LDI I,#206          ; I ← #206
03CE: DRW VA,VB,#4        ; Draw 8x4 sprite at (VA,VB)   (VF = collision)
03D0: LDS VB,#1A          ; VB ← #1A
03D2: LDI I,#20E          ; I ← #20E
03D4: DRW V8,VB,#4        ; Draw 8x4 sprite at (V8,VB)   (VF = collision)
03D6: LDI I,#23E          ; I ← #23E
03D8: DRW V9,VB,#4        ; Draw 8x4 sprite at (V9,VB)   (VF = collision)
03DA: JMP #248            ; Jump to address #248
03DC: JMP #3DC            ; Jump to address #3DC
